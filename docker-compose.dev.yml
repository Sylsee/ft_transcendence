# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
# \\\\\\\\\\\\\\\\\\Â DEVELOPMENT ENVIRONMENT \\\\\\\\\\\\\\\\\
# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
version: "3.9"
services:
  # ------------------------------------------------------------
  # Node - Backend
  # ------------------------------------------------------------
  backend:
    build:
      context: packages/backend
      dockerfile: Dockerfile.dev
    hostname: backend_dev
    volumes:
      - ./packages/backend/:/home/node/app
    environment:
      NODE_ENV: ${NODE_ENV}
    command:
      - sh
      - -c
      - npm ci && npm run start:dev
    depends_on:
      - db
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
      - 9229:9229 # for NodeJS debugging
    networks:
      - transcendence-network
    restart: unless-stopped

  # ------------------------------------------------------------
  # PostreSQL - Database
  # ------------------------------------------------------------
  db:
    image: postgres:12-alpine
    hostname: postgres-db_dev
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - transcendence-network
    restart: always

  # ------------------------------------------------------------
  # PgAdmin - Database Admin
  # ------------------------------------------------------------
  pgadmin:
    image: dpage/pgadmin4
    hostname: pgadmin_dev
    environment:
      GUNICORN_ACCESS_LOGFILE: "/dev/null"
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - transcendence-network
    depends_on:
      - db
    restart: always

  # ------------------------------------------------------------
  # Node - Frontend
  # ------------------------------------------------------------
  # frontend:
  #   build:
  #     context: packages/frontend
  #     target: ${NODE_ENV}
  #   hostname: frontend_dev
  #   env_file: .env
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   volumes:
  #     - ./packages/frontend/src:/usr/src/app/src
  #   ports:
  #     - ${FRONTEND_PORT}:${FRONTEND_PORT}
  #   networks:
  #     - transcendence-network
  #   restart: always

volumes:
  pgdata:
  pgadmin:
  node_modules:

networks:
  transcendence-network:
    driver: bridge
