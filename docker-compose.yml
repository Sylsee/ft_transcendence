version: "3.9"

services:
    backend:
        container_name: backend
        env_file: .env
        build:
            context: packages/backend
            target: ${NODE_ENV}
        volumes:
            - ./packages/backend/:/usr/src/app
            - /usr/src/app/node_modules
        ports:
            - "${BACKEND_PORT}:${BACKEND_PORT}"
            - 9229:9229 # for NodeJS debugging
        networks:
            - transcendence-network
        depends_on:
            - db
        links:
            - db
        restart: always

    db:
        image: postgres:12-alpine
        container_name: postgres-db
        env_file:
            - .env
        environment:
            PGDATA: "/var/lib/postgresql/data"
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        networks:
            - transcendence-network
        restart: always

    pgadmin-portal:
        image: dpage/pgadmin4
        container_name: pgadmin-portal
        env_file:
            - .env
        environment:
            GUNICORN_ACCESS_LOGFILE: "/dev/null"
        volumes:
            - pgadmin:/root/.pgadmin
        ports:
            - "${PGADMIN_PORT}:80"
        networks:
            - transcendence-network
        depends_on:
            - db
        restart: always

    frontend:
        container_name: frontend
        env_file: .env
        build:
            context: ./packages/frontend
            target: ${NODE_ENV}
        environment:
            - CHOKIDAR_USEPOLLING=true
        volumes:
            - ./packages/frontend/src:/usr/src/app/src
        ports:
            - "4000:3000"
        networks:
            - transcendence-network
        restart: always

volumes:
    pgdata:
    pgadmin:
    node_modules:

networks:
    transcendence-network:
        driver: bridge
